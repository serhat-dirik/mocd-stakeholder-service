
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package org.tempuri;

import java.io.IOException;
import java.util.logging.Logger;
import javax.annotation.Generated;
import javax.annotation.Resource;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.servlet.http.HttpServletResponse;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import javax.xml.ws.WebServiceContext;
import javax.xml.ws.handler.MessageContext;

/**
 * This class was generated by Apache CXF 3.1.7
 * 2019-02-21T00:59:07.531+04:00
 * Generated source version: 3.1.7
 * 
 */

@javax.jws.WebService(
                      serviceName = "StakeholderService",
                      portName = "StakeholderServiceSoap",
                      targetNamespace = "http://tempuri.org/",
                      wsdlLocation = "META-INF/wsdl/StakeholderService.wsdl",
                      endpointInterface = "org.tempuri.StakeholderServiceSoap")
                      
@Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2019-02-21T00:59:07.531+04:00", comments = "Apache CXF 3.1.7")
public class StakeholderServiceSoapImpl implements StakeholderServiceSoap {

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2019-02-21T00:59:07.531+04:00")
    private static final Logger LOG = Logger.getLogger(StakeholderServiceSoapImpl.class.getName());
    @Resource
    private WebServiceContext context;
    /* (non-Javadoc)
     * @see org.tempuri.StakeholderServiceSoap#getStakeholderInfo(java.lang.String nameAR, java.lang.String nameEN, java.lang.String identityNumber, java.lang.String phoneNumber, java.lang.String dateOfBirth, org.tempuri.Authentication authentication)*
     */
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2019-02-21T00:59:07.531+04:00")
    public org.tempuri.StakeholderInfo getStakeholderInfo(java.lang.String nameAR, java.lang.String nameEN, java.lang.String identityNumber, java.lang.String phoneNumber, java.lang.String dateOfBirth, Authentication authentication) { 
    	LOG.info("Executing operation getStakeholderInfo");
        System.out.println(nameAR);
        System.out.println(nameEN);
        System.out.println(identityNumber);
        System.out.println(phoneNumber);
        System.out.println(dateOfBirth);
        System.out.println(authentication);
        MessageContext ctx = context.getMessageContext();
        HttpServletResponse response = (HttpServletResponse) 
                ctx.get(MessageContext.SERVLET_RESPONSE);
        org.tempuri.StakeholderInfo _return = null;
        if(authentication == null||! authentication.getUsername().equalsIgnoreCase("user") || ! authentication.getPassword().equalsIgnoreCase("password")) {
            try {
				response.sendError(404, "Authorization Error!");
			} catch (IOException e) {
				LOG.info("UnAuthorized user access!!!");
			}
        }else {
        	try {
                _return = new StakeholderInfo();
                ArrayOfStakeholder ash = new ArrayOfStakeholder();
                Stakeholder sh = Stakeholder.randomGen();
                if (nameAR != null && nameAR.length() > 0) {
                	sh.setNameAR(nameAR);
                }
                if (nameEN != null && nameEN.length() > 0) {
                	sh.setNameEN(nameEN);
                }
                if (identityNumber != null && identityNumber.length() > 0) {
                	sh.setIdentityNumber(identityNumber);
                }
                if (phoneNumber != null && phoneNumber.length() > 0) {
                	sh.setPhoneNumber(phoneNumber);
                }
                if (dateOfBirth != null && dateOfBirth.length() > 0) {
                	sh.setDateOfBirth(dateOfBirth);
                }
                ash.getStakeholder().add(sh);
                _return.setStakeholders(ash);
                
            } catch (java.lang.Exception ex) {
            	LOG.severe("Error");
                ex.printStackTrace();
                try {
					response.sendError(500, "server error");
				} catch (IOException e) {
					
				}
            }
        }
        
        
        return _return;
    }

}
